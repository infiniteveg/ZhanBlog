<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>clash for linux安装</title>
    <link href="/2023/11/14/clash-for-linux%E5%AE%89%E8%A3%85/"/>
    <url>/2023/11/14/clash-for-linux%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p>适用于只有终端（SSH）的机器，不需root权限</p><h2 id="1-下载-订阅链接"><a class="markdownIt-Anchor" href="#1-下载-订阅链接"></a> 1. 下载、订阅链接</h2><p>clash for linux <a href="https://github.com/infiniteveg/infiniteveg.github.io/raw/main/clash/clash-linux-amd64">下载</a></p><p>Country.mmdb <a href="https://github.com/infiniteveg/infiniteveg.github.io/raw/main/clash/Country.mmdb">下载</a></p><p>此目录下的文件都可以直接可以使用，也可以在此仓库下载其他版本：<a href="https://github.com/zhongfly/Clash-premium-backup/releases">clash for linux(release)</a>。</p><p>本人现用机场: <a href="https://ovocloud.cc">https://ovocloud.cc</a>，也可：<a href="https://www.paopao.dog">https://www.paopao.dog</a>。注册订阅教程可以参考里面具体内容。</p><p>country.mmdb文件下载： <a href="https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb">https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb</a> ，放到<code>~/.config/clash/</code> 中。</p><h2 id="2-安装"><a class="markdownIt-Anchor" href="#2-安装"></a> 2. 安装</h2><p>解压后增加执行权限。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">chmod</span> +x clash-linux-amd64<br></code></pre></td></tr></table></figure><p>下载订阅文件<code>config.yaml</code>到任意位置，可以修改其中相关内容。文件内容参考如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">port:</span> <span class="hljs-number">7890</span><br><span class="hljs-attr">socks-port:</span> <span class="hljs-number">7891</span><br><span class="hljs-attr">allow-lan:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">mode:</span> <span class="hljs-string">Rule</span><br><span class="hljs-attr">log-level:</span> <span class="hljs-string">info</span><br><span class="hljs-attr">external-controller:</span> <span class="hljs-string">:9090</span><br><span class="hljs-comment"># secret: &quot;passwd&quot;</span><br><span class="hljs-attr">dns:</span><br>    <span class="hljs-string">......</span><br><span class="hljs-attr">proxies:</span><br>    <span class="hljs-string">......</span><br></code></pre></td></tr></table></figure><p>其中<code>secret</code>为管理端的密码，可以自行指定或不指定</p><h2 id="3-后台运行clash"><a class="markdownIt-Anchor" href="#3-后台运行clash"></a> 3. 后台运行clash</h2><p>可以简单在vscode里多开一个终端，或者使用screen命令，该命令也有助于防止因服务器断联导致的程序中断。</p><h3 id="screen用法简介"><a class="markdownIt-Anchor" href="#screen用法简介"></a> screen用法简介</h3><blockquote><p><strong>新建一个screen会话</strong><br />screen -S &lt;名字&gt;</p><p><strong>退出当前screen会话</strong><br />键盘点击ctrl+a , 然后按d</p><p><strong>查看所有screen会话</strong><br />screen -ls</p><p><strong>进入（恢复）某一screen会话</strong><br />screen -r &lt;会话序列号&gt;</p><p>说明:会话序列号可通过screen -ls获得</p><p><strong>关闭screen会话</strong><br />screen -X -S &lt;序列号&gt; quit</p></blockquote><p>因此这里用法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">screen -S clash<br>./clash -f config.yaml<br></code></pre></td></tr></table></figure><p>这里的<code>clash</code>和<code>config.yaml</code>目录自己指定。</p><p>如一切正常会看到以下回显，按住 Ctrl 依次再按一下 A D 将 clash core 切换到后台。</p><p><img src="clash_run.jpg" alt="clash_run" /></p><h2 id="4-设置代理"><a class="markdownIt-Anchor" href="#4-设置代理"></a> 4. 设置代理</h2><p>然后我们需要把http和https的流量都发送到指定端口，在home目录下的.bashrc中添加以下并保存。</p><p>这一步可以自定义一个函数，开启clash只需要输入proxy即可，按Ctrl+C关闭clash并清空ALL_PROXY的值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> ALL_PROXY=<span class="hljs-string">&quot;http://127.0.0.1:7890&quot;</span><br><br><span class="hljs-comment"># proxy</span><br><span class="hljs-function"><span class="hljs-title">proxy</span></span> () &#123;<br>    <span class="hljs-comment"># export ALL_PROXY=&quot;http://127.0.0.1:7890&quot;</span><br>    <span class="hljs-comment"># echo &quot;HTTP Proxy on&quot;</span><br>    /home/sz/clash/clash-linux-amd64 -f /home/sz/.config/clash/config.yaml<br>    <span class="hljs-built_in">unset</span> ALL_PROXY<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;HTTP Proxy off&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>并在终端里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br>proxy<br></code></pre></td></tr></table></figure><p>就可以正常使用啦。</p><p>管理界面：如果在vscode中，可以将服务器的9090端口转发到本机某个端口，比如9090，然后打开<a href="http://clash.razord.top/">这个网址</a>。其中 Host 为 Linux 主机的 IP 地址，端口为 9090（即config.yaml中指定的external-controller的值），密钥为第五步中设置的密码。填写妥当后点击确定。(但这一步我显示不出来，g)</p><h2 id="5-测试网络连通性"><a class="markdownIt-Anchor" href="#5-测试网络连通性"></a> 5. 测试网络连通性</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -I https://google.com<br></code></pre></td></tr></table></figure><p>如果联通正常有如下回显:</p><p><img src="google.jpg" alt="google" /></p><p>请注意 Ping 命令使用 ICMP 协议，默认不走代理。</p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
